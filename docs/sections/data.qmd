# Data

* Sources
* Description
* Wrangling/cleaning
* Spotting mistakes and missing data (could be part of EDA too)
* Listing anomalies and outliers (could be part of EDA too)

```{r echo = FALSE, message = FALSE, warning=FALSE}
library(here)
directory <- here()

properties <- read.csv(file.path(directory,"../data/properties.csv"))

metrecarré <- read.csv(file.path(directory,"../data/snb-data-plimoincha-fr-all-20240321_0900.csv"))
# Assuming your data frame is named metrecarré
metrecarré <- metrecarré[-1, ]

split_data <- lapply(metrecarré, function(x) unlist(strsplit(as.character(x), ";")))

split_df <- do.call(rbind, split_data)
```

```{r  echo = FALSE, message = FALSE, warning=FALSE}
#install.packages("readxl")
library(readxl)

# Read the cpi file
cpi_data_excel <- read_excel(file.path(directory,"../data/cpi.xlsx"))
# Write the data to a CSV file
write.csv(cpi_data_excel, file.path(directory,"../data/cpi.csv"), row.names = FALSE)
# Load the CSV file into a data frame
cpi <- read.csv(file.path(directory,"../data/cpi.csv"))


# Read the empty_dwellings file
empty_excel <- read_excel(file.path(directory,"../data/empty_dwellings_by_canton_1999-2023.xlsx"))
# Write the data to a CSV file
write.csv(empty_excel, file.path(directory,"../data/empty_dwellings.csv"), row.names = FALSE)
# Load the CSV file into a data frame
empty_dwellings <- read.csv(file.path(directory,"../data/empty_dwellings.csv"))
```


## Loading and small cleaning (not complete for now)

```{r, warning=FALSE}
getwd()
# Load the CSV file into a data frame
properties <- read.csv("../../data/properties.csv")

# impots <- read_excel("../../data/statistik-steuerfuesse-np-1995-2023-fr.xlsx", skip = 14)
# # Remove last 13 rows
# impots <- head(impots, -14)
# # Rename columns
# colnames(impots) <- c("Chefs-lieux cantonaux", "Impôt cantonal", "Impôt communal", "Impôt paroissial Evang. / réform", "Impôt paroissial Kath. / cath.rom")
# write.csv(impots, "statistik-steuerfuesse-np-1995-2023-fr.csv", row.names = FALSE)
# 

# Identify values causing the issue
problematic_values <- properties$number_of_rooms[is.na(as.numeric(properties$number_of_rooms))]

# Replace non-numeric values with NA
properties$number_of_rooms <- as.numeric(gsub("[^0-9.]", "", properties$number_of_rooms))

# Remove non-numeric characters and convert to numeric
properties$price <- as.numeric(gsub("[^0-9]", "", properties$price))

# Subset the dataset to exclude rows with price < 20000
properties <- properties[properties$price >= 20000, ]

# Subset the dataset to exclude rows with numbers of rooms < 25
properties <- properties[properties$number_of_rooms <25, ]

# Replace incomplete addresses
properties$address <- gsub("^\\W*[.,0-]\\W*", "", properties$address)

properties_filtered <- na.omit(properties)

properties_filtered$year_category <- substr(properties_filtered$year_category, 1, 9)
# Assuming 'year_category' is a column in the 'properties' dataset
properties_filtered$year_category <- as.factor(properties_filtered$year_category)

# Preprocess the number_of_rooms column
properties_filtered$number_of_rooms <- as.character(properties_filtered$number_of_rooms)
properties_filtered$number_of_rooms <- gsub("\\D", "", properties_filtered$number_of_rooms)  # Remove non-numeric characters
properties_filtered$number_of_rooms <- as.numeric(properties_filtered$number_of_rooms)       # Convert to numeric
properties_filtered$number_of_rooms <- trunc(properties_filtered$number_of_rooms)             # Truncate non-integer values
```

## Creating Variable zip_code and merging with AMTOVZ_CSV_LV95

```{r}
head(properties_filtered)
df <- properties_filtered
#the address column is like : '1844 Villeneuve VD' and has zip code number in it
#taking out the zip code number and creating a new column 'zip_code'
#the way to identify the zip code is to identify numbers that are 4 digits long
df$zip_code <- as.numeric(gsub("\\D", "", df$address))
#removing the first two number of zip code has more than 4 number
df$zip_code <- ifelse(df$zip_code > 9999, df$zip_code %% 10000, df$zip_code)
head(df)
```

```{r}
#read .csv AMTOVZ_CSV_LV95
amto <- read.csv("Project/Machine_Learning/data/AMTOVZ_CSV_LV95.csv", sep=';', encoding='latin1')
head(amto)

#creating a new dataframe with 'Ortschaftsname' as 'City'Place_name', 'PLZ' as 'zip_code' and 'KantonskÃ.rzel' as 'Canton_code'
amto_df <- data.frame(City=amto$Ortschaftsname, zip_code=amto$PLZ, Canton_code=amto$KantonskÃ.rzel)
head(amto_df)
```
```{r}
#merge the two dataframes 'df' and 'amto_df' on 'zip_code'
df <- merge(df, amto_df, by='zip_code', all.x=TRUE)
head(df)

#check if there are nan in city
df[is.na(df$City),]

```
We have 144 NAN, where

- The zip code was not found in the atmo df
- The zip code was incorectly isolated from the address

Removed them
```{r}
#remove the rows with nan in city
properties_filtered <- df[!is.na(df$City),]
```
